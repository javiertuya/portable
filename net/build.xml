<project name="Portable" default="build" basedir="." xmlns:if="ant:if" xmlns:unless="ant:unless" xmlns:dn="antlib:org.apache.ant.dotnet" xmlns="antlib:org.apache.tools.ant">

	<description>Version C# de Portable</description>
  <!--Uses java for sharpen if this property specifies the location of a java7 executable, if not, uses containers -->
  <property environment="env"/>
  <property name="java7.exec" value="C:/Program Files/Java/jdk1.7.0_75/bin/java" unless:set="env.GITHUB_WORKSPACE" />

  <!-- En vez de hacer import directo de la url, hace un get primero para descargar en local los archivos
  usetimestamp para comprobar por fecha, skipexisting para comprobar si ya existe el fichero-->
  <mkdir dir="packages" />
  <property name="ant-util-url" value="https://in4test.lsi.uniovi.es/xlib/ant-util-master" />
  <get src="${ant-util-url}/ant.netcore.xml" dest="packages/ant.netcore.xml" usetimestamp="true" />
  <import file="packages/ant.netcore.xml"/>

  <target name="clean" description="limpia archivos temporales y generados">
    <delete dir="Portable/bin"/>
    <delete dir="Portable/obj"/>
    <delete dir="Portable/nupkg"/>
    <delete dir="PortableTest/bin"/>
    <delete dir="PortableTest/obj"/>
    <delete dir="PortableTest/TestResults"/>
    <delete dir="packages"/>
    <delete dir="reports"/>
    <delete dir="dist"/>
    <delete dir="sharpen-temp"/>
  </target>

  <target name="build" description="compilacion de fuentes y test y publicacion de aplicacion web">
    <build.netcore project.dir="." project.name="Portable.sln" />
  </target>

  <target name="test" description="pruebas ut">
    <mstest.run project.name="PortableTest" testxmlresult="TestResults-test.trx" coverage="false" />
    <junit.report />
  </target>

  <target name="pack">
    <!--cuando se ejecuta en local hay que indicar la version mayor.minor que esta en InformationalVersion
    mas un numero de build que hay que incrementar cada vez que se genere un nuevo paquete-->
    <pack.nuget.giis target.project="Portable/Portable.csproj" target.package="Portable"
                     production.branch="master" qualify.artifact="true"
                     local.version="2.0.1" local.branch="local" />
  </target>

  <target name="sharpen" description="Traduce el codigo fuente de Portable de Java a C#"
          depends="sharpen.preprocess, sharpen.sharpen, sharpen.postprocess ">
    <!--
      Three stages (each is run as a target):
      - copy java files to a sharpen-temp/java directory and gets dependencies
      - perform the sharpen translation
      - final changes in translated files (in temporary folder) and copy to the solution
    -->
  </target>

  <target name="sharpen.preprocess">
    <!--copia los fuentes a la carpeta temporal donde se traduciran y postprocesaran-->
    <copy todir="sharpen-temp/java">
      <fileset dir="../java/src/main/java" >
      </fileset>
      <fileset dir="../java/src/test/java" >
      </fileset>
    </copy>
    <replace dir="sharpen-temp/java">
      <include name="giis*/**" />
      <replacefilter token="WildcardFileFilter.builder().setWildcards(fileNameWildcard).get()" value="new WildcardFileFilter(fileNameWildcard)" />
    </replace>
    <mkdir dir="sharpen-temp/lib" />

    <!-- Other libraries to resolve depenencies when executing sharpen (delcared in sharpen-all-options.txt) -->
    <sequential>
      <get src="https://repo1.maven.org/maven2/junit/junit/4.13.2/junit-4.13.2.jar" dest="sharpen-temp/lib/junit-4.13.2.jar" usetimestamp="true" />
      <get src="https://repo1.maven.org/maven2/commons-io/commons-io/2.6/commons-io-2.6.jar" dest="sharpen-temp/lib/commons-io-2.6.jar" usetimestamp="true" />
      <get src="https://repo1.maven.org/maven2/commons-codec/commons-codec/1.15/commons-codec-1.15.jar" dest="sharpen-temp/lib/commons-codec-1.15.jar" usetimestamp="true" />
    </sequential>
  </target>

  <target name="sharpen.sharpen">
    <sharpen.run.java7 if:set="java7.exec" />
    <sharpen.run.container unless:set="java7.exec" />
  </target>

  <macrodef name="sharpen.run.container" description="Run sharpen from a container" >
    <sequential>
      <exec executable="docker" failonerror="true" >
        <arg value="build" />
        <arg value="-t" />
        <arg value="sharpen" />
        <arg value="./sharpen-docker" />
      </exec>
      <echo>${basedir}</echo>
      <exec executable="docker" failonerror="true" >
        <arg value="run" />
        <arg value="-v" />
        <arg value="${basedir}:/sharpen/workdir" />
        <arg value="sharpen" />
        <arg value="." />
        <arg value="sharpen-temp/java" />
        <arg value="@sharpen-all-options.txt" />
      </exec>
    </sequential>
  </macrodef>

  <macrodef name="sharpen.run.java7" description="Run sharpen with local java7 installation" >
    <sequential>
      <get src="https://github.com/javiertuya/sharpen/releases/download/v1.0.1-fork/sharpencore-0.0.1-SNAPSHOT.jar" 
           dest="sharpen-temp/lib/sharpencore-0.0.1-SNAPSHOT.jar" usetimestamp="true" />
      <exec executable="${java7.exec}" failonerror="true" >
        <arg value="-jar" />
        <arg value="sharpen-temp/lib/sharpencore-0.0.1-SNAPSHOT.jar" />
        <arg value="sharpen-temp/java" />
        <arg value="@sharpen-all-options.txt" />
      </exec>
    </sequential>
  </macrodef>
  
  <target name="sharpen.postprocess">
    <!-- Copia a los proyectos .net -->
    <copy todir="Portable/Translated">
      <fileset dir="sharpen-temp/sharpen-temp.net">
        <include name="Giis.Portable.Xml.Tiny/XNodeAbstract.cs" />
      </fileset>
      <filterchain>
        <concatfilter prepend="sharpen-autogenerated-note.txt"/>
      </filterchain>
    </copy>
    <copy todir="PortableTest/Translated">
      <fileset dir="sharpen-temp/sharpen-temp.net">
        <include name="Giis.Portable/*" />
      </fileset>
      <filterchain>
        <concatfilter prepend="sharpen-autogenerated-note.txt"/>
      </filterchain>
    </copy>
 
  </target>

</project>