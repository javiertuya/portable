name: test-all
on:
  push:
    branches-ignore:
      - 'dependabot/**' #avoid duplicates: only run the PR, not the commit
    tags-ignore:
      - 'v*' #avoids rerun existing commit on release
  pull_request:
    branches:
      - 'main'

permissions:
  contents: read
  packages: write

jobs:
  test-java:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: java
    #if: ${{ false }}  # disable for now
    steps:
      - name: Checkout GitHub repo
        uses: actions/checkout@v3
      - name: Select Java Version
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'

      - name: Build and test
        run: mvn test -Dmaven.test.failure.ignore=true -U --no-transfer-progress
      - name: Publish test report
        if: always()
        uses: mikepenz/action-junit-report@v3.7.7
        with:
          check_name: test-report-java
          report_paths: '**/target/surefire-reports/TEST-*.xml'
          fail_on_failure: 'true'
 
      - if: always()
        name: Publish test reports
        uses: actions/upload-artifact@v3
        with:
          name: test-report-java-files
          #working-directory does not work here
          path: |
            java/target/surefire-reports
  test-net:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: net
    #dorny reporter fails if this permissions not set
    #however it does not fail in viusal-assert build!!
    permissions:
      id-token: write
      contents: read
      checks: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3.2.0
        with:
            dotnet-version: '3.1.x'

      - name: Run test
        run: dotnet test --logger "trx;LogFileName=../../reports/portable-report.trx" PortableTest/PortableTest.csproj

      #Shows message in case of some failure (as test report checks are not always produced)
      - name: Failure message if needed
        if: failure()
        run: echo "::error ::There was a build error or test failure, see the log and diff files in the test report artifacts"

      #prevents execute on pr or dependabot that fails with "Resource not accessible by integration" due to permissions
      - name: Publish test report
        if: ${{ always() && github.actor=='javiertuya' }} 
        uses: dorny/test-reporter@v1
        with:
          name: test-report-net
          #working-directory does not work here
          path: net/reports/portable-report.trx
          reporter: dotnet-trx
          fail-on-error: 'true'

      - if: always()
        name: Publish test reports files
        uses: actions/upload-artifact@v3
        with:
          name: test-report-net-files
          #working-directory does not work here
          path: net/reports

  publish-java-snapshot:
    #needs: [test-java]
    #avoid publishing dependabot branches
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: java
    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 
    steps:
      - name: Checkout GitHub repo
        uses: actions/checkout@v3
      - name: Select Java Version
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'

      - name: Rename version to <version number>-<branch name>-SNAPSHOT
        run: |
          oldversion=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Renaming old version: ${oldversion}"
          version=${oldversion//-SNAPSHOT/}
          version=${version}-${BRANCH_NAME}-SNAPSHOT
          echo "to new Version: $version"
          mvn versions:set -DnewVersion=$version --no-transfer-progress

      # manage package versions shows the date in which branch was created, not executed
      # if no changing version number, this will keep latest 2 branches BY BRANCH CREATION
      # because of this, deletion must be done BEFORE deploy (if not, a version of old branch can be deleted after being updated)
      # TODO check how to exclude current branch
      # NOTE at least one package must exist, if not the build fails (comment for the first build)
      - uses: actions/delete-package-versions@v4
        with: 
          package-name: 'io.github.javiertuya.portable-java'
          package-type: 'maven'
          min-versions-to-keep: 4
          delete-only-pre-release-versions: "true"

      # note that deploy uses the profile that specifies the github repository server
      - name: Deploy to GitHub packages
        run: mvn deploy -P publish-github -DskipTests=true -U --no-transfer-progress
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
